{"version":3,"sources":["headroom.js","jQuery.headroom.js"],"names":["root","factory","define","amd","exports","module","Headroom","this","Debouncer","callback","ticking","isDOMElement","obj","window","nodeType","extend","object","arguments","length","Error","key","i","result","replacement","normalizeTolerance","t","Object","down","up","elem","options","lastKnownScrollY","tolerance","classes","offset","scroller","initialised","onPin","onUnpin","onTop","onNotTop","onBottom","onNotBottom","features","bind","classList","document","documentElement","rAF","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","prototype","constructor","update","requestTick","rafCallback","handleEvent","init","cutsTheMustard","debouncer","add","initial","setTimeout","attachEvent","destroy","hasOwnProperty","remove","removeEventListener","getScrollY","addEventListener","unpin","contains","pinned","unpinned","call","pin","top","notTop","bottom","notBottom","undefined","pageYOffset","scrollTop","body","parentNode","getViewportHeight","innerHeight","clientHeight","getElementPhysicalHeight","elm","Math","max","offsetHeight","getScrollerPhysicalHeight","getDocumentHeight","scrollHeight","getElementHeight","getScrollerHeight","isOutOfBounds","currentScrollY","pastTop","pastBottom","toleranceExceeded","direction","abs","shouldUnpin","scrollingDown","pastOffset","shouldPin","scrollingUp","scrollDirection","$","fn","headroom","option","each","$this","data","removeData","Zepto","jQuery"],"mappings":"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","file":"../vendor.js","sourcesContent":["/*!\n * headroom.js v0.9.4 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2017 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  }\n  else if (typeof exports === 'object') {\n    // COMMONJS\n    module.exports = factory();\n  }\n  else {\n    // BROWSER\n    root.Headroom = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  /* exported features */\n  \n  var features = {\n    bind : !!(function(){}.bind),\n    classList : 'classList' in document.documentElement,\n    rAF : !!(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame)\n  };\n  window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n  \n  /**\n   * Handles debouncing of events via requestAnimationFrame\n   * @see http://www.html5rocks.com/en/tutorials/speed/animations/\n   * @param {Function} callback The callback to handle whichever event\n   */\n  function Debouncer (callback) {\n    this.callback = callback;\n    this.ticking = false;\n  }\n  Debouncer.prototype = {\n    constructor : Debouncer,\n  \n    /**\n     * dispatches the event to the supplied callback\n     * @private\n     */\n    update : function() {\n      this.callback && this.callback();\n      this.ticking = false;\n    },\n  \n    /**\n     * ensures events don't get stacked\n     * @private\n     */\n    requestTick : function() {\n      if(!this.ticking) {\n        requestAnimationFrame(this.rafCallback || (this.rafCallback = this.update.bind(this)));\n        this.ticking = true;\n      }\n    },\n  \n    /**\n     * Attach this as the event listeners\n     */\n    handleEvent : function() {\n      this.requestTick();\n    }\n  };\n  /**\n   * Check if object is part of the DOM\n   * @constructor\n   * @param {Object} obj element to check\n   */\n  function isDOMElement(obj) {\n    return obj && typeof window !== 'undefined' && (obj === window || obj.nodeType);\n  }\n  \n  /**\n   * Helper function for extending objects\n   */\n  function extend (object /*, objectN ... */) {\n    if(arguments.length <= 0) {\n      throw new Error('Missing arguments in extend function');\n    }\n  \n    var result = object || {},\n        key,\n        i;\n  \n    for (i = 1; i < arguments.length; i++) {\n      var replacement = arguments[i] || {};\n  \n      for (key in replacement) {\n        // Recurse into object except if the object is a DOM element\n        if(typeof result[key] === 'object' && ! isDOMElement(result[key])) {\n          result[key] = extend(result[key], replacement[key]);\n        }\n        else {\n          result[key] = result[key] || replacement[key];\n        }\n      }\n    }\n  \n    return result;\n  }\n  \n  /**\n   * Helper function for normalizing tolerance option to object format\n   */\n  function normalizeTolerance (t) {\n    return t === Object(t) ? t : { down : t, up : t };\n  }\n  \n  /**\n   * UI enhancement for fixed headers.\n   * Hides header when scrolling down\n   * Shows header when scrolling up\n   * @constructor\n   * @param {DOMElement} elem the header element\n   * @param {Object} options options for the widget\n   */\n  function Headroom (elem, options) {\n    options = extend(options, Headroom.options);\n  \n    this.lastKnownScrollY = 0;\n    this.elem             = elem;\n    this.tolerance        = normalizeTolerance(options.tolerance);\n    this.classes          = options.classes;\n    this.offset           = options.offset;\n    this.scroller         = options.scroller;\n    this.initialised      = false;\n    this.onPin            = options.onPin;\n    this.onUnpin          = options.onUnpin;\n    this.onTop            = options.onTop;\n    this.onNotTop         = options.onNotTop;\n    this.onBottom         = options.onBottom;\n    this.onNotBottom      = options.onNotBottom;\n  }\n  Headroom.prototype = {\n    constructor : Headroom,\n  \n    /**\n     * Initialises the widget\n     */\n    init : function() {\n      if(!Headroom.cutsTheMustard) {\n        return;\n      }\n  \n      this.debouncer = new Debouncer(this.update.bind(this));\n      this.elem.classList.add(this.classes.initial);\n  \n      // defer event registration to handle browser\n      // potentially restoring previous scroll position\n      setTimeout(this.attachEvent.bind(this), 100);\n  \n      return this;\n    },\n  \n    /**\n     * Unattaches events and removes any classes that were added\n     */\n    destroy : function() {\n      var classes = this.classes;\n  \n      this.initialised = false;\n  \n      for (var key in classes) {\n        if(classes.hasOwnProperty(key)) {\n          this.elem.classList.remove(classes[key]);\n        }\n      }\n  \n      this.scroller.removeEventListener('scroll', this.debouncer, false);\n    },\n  \n    /**\n     * Attaches the scroll event\n     * @private\n     */\n    attachEvent : function() {\n      if(!this.initialised){\n        this.lastKnownScrollY = this.getScrollY();\n        this.initialised = true;\n        this.scroller.addEventListener('scroll', this.debouncer, false);\n  \n        this.debouncer.handleEvent();\n      }\n    },\n  \n    /**\n     * Unpins the header if it's currently pinned\n     */\n    unpin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(classList.contains(classes.pinned) || !classList.contains(classes.unpinned)) {\n        classList.add(classes.unpinned);\n        classList.remove(classes.pinned);\n        this.onUnpin && this.onUnpin.call(this);\n      }\n    },\n  \n    /**\n     * Pins the header if it's currently unpinned\n     */\n    pin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(classList.contains(classes.unpinned)) {\n        classList.remove(classes.unpinned);\n        classList.add(classes.pinned);\n        this.onPin && this.onPin.call(this);\n      }\n    },\n  \n    /**\n     * Handles the top states\n     */\n    top : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.top)) {\n        classList.add(classes.top);\n        classList.remove(classes.notTop);\n        this.onTop && this.onTop.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notTop : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.notTop)) {\n        classList.add(classes.notTop);\n        classList.remove(classes.top);\n        this.onNotTop && this.onNotTop.call(this);\n      }\n    },\n  \n    bottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.bottom)) {\n        classList.add(classes.bottom);\n        classList.remove(classes.notBottom);\n        this.onBottom && this.onBottom.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notBottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n  \n      if(!classList.contains(classes.notBottom)) {\n        classList.add(classes.notBottom);\n        classList.remove(classes.bottom);\n        this.onNotBottom && this.onNotBottom.call(this);\n      }\n    },\n  \n    /**\n     * Gets the Y scroll position\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY\n     * @return {Number} pixels the page has scrolled along the Y-axis\n     */\n    getScrollY : function() {\n      return (this.scroller.pageYOffset !== undefined)\n        ? this.scroller.pageYOffset\n        : (this.scroller.scrollTop !== undefined)\n          ? this.scroller.scrollTop\n          : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    },\n  \n    /**\n     * Gets the height of the viewport\n     * @see http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript\n     * @return {int} the height of the viewport in pixels\n     */\n    getViewportHeight : function () {\n      return window.innerHeight\n        || document.documentElement.clientHeight\n        || document.body.clientHeight;\n    },\n  \n    /**\n     * Gets the physical height of the DOM element\n     * @param  {Object}  elm the element to calculate the physical height of which\n     * @return {int}     the physical height of the element in pixels\n     */\n    getElementPhysicalHeight : function (elm) {\n      return Math.max(\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the physical height of the scroller element\n     * @return {int} the physical height of the scroller element in pixels\n     */\n    getScrollerPhysicalHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getViewportHeight()\n        : this.getElementPhysicalHeight(this.scroller);\n    },\n  \n    /**\n     * Gets the height of the document\n     * @see http://james.padolsey.com/javascript/get-document-height-cross-browser/\n     * @return {int} the height of the document in pixels\n     */\n    getDocumentHeight : function () {\n      var body = document.body,\n        documentElement = document.documentElement;\n  \n      return Math.max(\n        body.scrollHeight, documentElement.scrollHeight,\n        body.offsetHeight, documentElement.offsetHeight,\n        body.clientHeight, documentElement.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the DOM element\n     * @param  {Object}  elm the element to calculate the height of which\n     * @return {int}     the height of the element in pixels\n     */\n    getElementHeight : function (elm) {\n      return Math.max(\n        elm.scrollHeight,\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the scroller element\n     * @return {int} the height of the scroller element in pixels\n     */\n    getScrollerHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getDocumentHeight()\n        : this.getElementHeight(this.scroller);\n    },\n  \n    /**\n     * determines if the scroll position is outside of document boundaries\n     * @param  {int}  currentScrollY the current y scroll position\n     * @return {bool} true if out of bounds, false otherwise\n     */\n    isOutOfBounds : function (currentScrollY) {\n      var pastTop  = currentScrollY < 0,\n        pastBottom = currentScrollY + this.getScrollerPhysicalHeight() > this.getScrollerHeight();\n  \n      return pastTop || pastBottom;\n    },\n  \n    /**\n     * determines if the tolerance has been exceeded\n     * @param  {int} currentScrollY the current scroll y position\n     * @return {bool} true if tolerance exceeded, false otherwise\n     */\n    toleranceExceeded : function (currentScrollY, direction) {\n      return Math.abs(currentScrollY-this.lastKnownScrollY) >= this.tolerance[direction];\n    },\n  \n    /**\n     * determine if it is appropriate to unpin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should unpin, false otherwise\n     */\n    shouldUnpin : function (currentScrollY, toleranceExceeded) {\n      var scrollingDown = currentScrollY > this.lastKnownScrollY,\n        pastOffset = currentScrollY >= this.offset;\n  \n      return scrollingDown && pastOffset && toleranceExceeded;\n    },\n  \n    /**\n     * determine if it is appropriate to pin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should pin, false otherwise\n     */\n    shouldPin : function (currentScrollY, toleranceExceeded) {\n      var scrollingUp  = currentScrollY < this.lastKnownScrollY,\n        pastOffset = currentScrollY <= this.offset;\n  \n      return (scrollingUp && toleranceExceeded) || pastOffset;\n    },\n  \n    /**\n     * Handles updating the state of the widget\n     */\n    update : function() {\n      var currentScrollY  = this.getScrollY(),\n        scrollDirection = currentScrollY > this.lastKnownScrollY ? 'down' : 'up',\n        toleranceExceeded = this.toleranceExceeded(currentScrollY, scrollDirection);\n  \n      if(this.isOutOfBounds(currentScrollY)) { // Ignore bouncy scrolling in OSX\n        return;\n      }\n  \n      if (currentScrollY <= this.offset ) {\n        this.top();\n      } else {\n        this.notTop();\n      }\n  \n      if(currentScrollY + this.getViewportHeight() >= this.getScrollerHeight()) {\n        this.bottom();\n      }\n      else {\n        this.notBottom();\n      }\n  \n      if(this.shouldUnpin(currentScrollY, toleranceExceeded)) {\n        this.unpin();\n      }\n      else if(this.shouldPin(currentScrollY, toleranceExceeded)) {\n        this.pin();\n      }\n  \n      this.lastKnownScrollY = currentScrollY;\n    }\n  };\n  /**\n   * Default options\n   * @type {Object}\n   */\n  Headroom.options = {\n    tolerance : {\n      up : 0,\n      down : 0\n    },\n    offset : 0,\n    scroller: window,\n    classes : {\n      pinned : 'headroom--pinned',\n      unpinned : 'headroom--unpinned',\n      top : 'headroom--top',\n      notTop : 'headroom--not-top',\n      bottom : 'headroom--bottom',\n      notBottom : 'headroom--not-bottom',\n      initial : 'headroom'\n    }\n  };\n  Headroom.cutsTheMustard = typeof features !== 'undefined' && features.rAF && features.bind && features.classList;\n\n  return Headroom;\n}));","/*!\n * headroom.js v0.9.4 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2017 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function($) {\n\n  if(!$) {\n    return;\n  }\n\n  ////////////\n  // Plugin //\n  ////////////\n\n  $.fn.headroom = function(option) {\n    return this.each(function() {\n      var $this   = $(this),\n        data      = $this.data('headroom'),\n        options   = typeof option === 'object' && option;\n\n      options = $.extend(true, {}, Headroom.options, options);\n\n      if (!data) {\n        data = new Headroom(this, options);\n        data.init();\n        $this.data('headroom', data);\n      }\n      if (typeof option === 'string') {\n        data[option]();\n\n        if(option === 'destroy'){\n          $this.removeData('headroom');\n        }\n      }\n    });\n  };\n\n  //////////////\n  // Data API //\n  //////////////\n\n  $('[data-headroom]').each(function() {\n    var $this = $(this);\n    $this.headroom($this.data());\n  });\n\n}(window.Zepto || window.jQuery));"]}